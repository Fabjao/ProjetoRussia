// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using ProjetoRussia.Core.Models;

namespace ProjetoRussia.Core.Migrations
{
    [DbContext(typeof(CopaContext))]
    partial class CopaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoRussia.Core.Models.Jogador", b =>
                {
                    b.Property<int>("JogadorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Idade");

                    b.Property<string>("Nome");

                    b.Property<int>("SelecaoId");

                    b.Property<string>("Time");

                    b.HasKey("JogadorId");

                    b.HasIndex("SelecaoId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("ProjetoRussia.Core.Models.Selecao", b =>
                {
                    b.Property<int>("SelecaoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("SelecaoId");

                    b.ToTable("Selecoes");
                });

            modelBuilder.Entity("ProjetoRussia.Core.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsPesistent");

                    b.Property<string>("Login");

                    b.Property<string>("Senha");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjetoRussia.Core.Models.Jogador", b =>
                {
                    b.HasOne("ProjetoRussia.Core.Models.Selecao")
                        .WithMany("Jogadores")
                        .HasForeignKey("SelecaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
